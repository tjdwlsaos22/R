# column 수
length(iris)
ncol(iris)
nrow(iris) - 우리가 말하는 데이터프레임 갯수​
평균 = mean
​
#iris의 Sepal.Length의 최댓값과 최솟값의 차이가 평균보다 큰지?
(max(iris$Sepal.Length)-min(iris$Sepal.Length)) > mean(iris$Sepal.Length)
​
iris[1:10,c("Sepal.Length","Petal.Length")]​
이런식으로도 쓸수있다. 1~10줄. 그리고 "안에 있는 열만 출력
colnames(iris)​
rownames(iris) 도 가능. 이름출력
​
#iris의 Sepal.Length를 iSL이라는 벡터를 생성하고 이중 1번 2번 데이터를 삭제 하고 완료하기.

length(iris$Sepal.Length)
iSL <- iris$Sepal.Length[-c(1:2)]
length(iSL)​
​
summary(iris)
median(iris$Sepal.Length)​
​
#중앙값과 평균
num1 <- c(1,1,1,1,5)
mean(num1)
median(num1)
​
#factor Type 인 Species에서 문자와 숫자로 각각 출력하기.
as.character(iris$Species)
as.numeric(iris$Species)
​
x <- c(3,6,9,12,15)
x+1    4,7,10,13,16
x + c(1,2,3,4,5)   4,8,12,16,20
​
x + c(2,3) 사용시에 값은나오지만
Warning message in x + c(2, 3):
"longer object length is not a multiple of shorter object length" 오류 발생
​
# 벡터 합치기
x <- c(3,5,6,12,15)
y <- c(1,2,3,4,5)
z <- append(x,y) 3,5,6,12,15,1,2,3,4,5
​
# iris의 Sepal.Length의 중복되지(unique) 않은 갯수의 percent 구하기.
per <- (length(unique(iris$Sepal.Length))/nrow(iris))*100
중복되지 않는 sepal.length의 길이를 구하고. 전체 데이터수로 나눠서 *100을한다.

print(per)
​
# iris의 Sepal.Length의 중복된 갯수의 percent 구하기. -  전체길이에서 unique를 빼면됨. ​
per1 <- (length(iris$Sepal.Length)-length(unique(iris$Sepal.Length)))/nrow(iris)*100
​
​
 x <- c('a','b','c','d','e')
 x
 x[1:2]  'a' 'b'
 paste(x[1],x[2],sep=""​​)   하나로 묶는것 'a b'  sep넣을시 구분자가 없으므로 a랑b가 붙음.
​
paste(iris$Species[1],":",iris$Species[51],":",iris$Species[101])
​
​
cat("90","\tc","\n90","\tc")
​
90 	c 
90 	c
​
paste("010","1111","2222",sep="-")​
str01 <- "abcdefghijklm"
substring(str01,2,5)​
​
2번부터 5번숫자 추출  bcde
​
​
# rbind : row bind
​
vec1 <- c(1,2,3)
vec2 <- c(4,5,6)
vec3 <- c(7,8,9)​

mat1 <- rbind(vec1,vec2,vec3)
mat1
vec1	1	2	3
vec2	4	5	6
vec3	7	8	9​
​
mat2 <- cbind(vec1,vec2,vec3)
mat2​
vec1	vec2	vec3
1	4	7
2	5	8
3	6	9​
​
​
irisHead <- head(iris ,5)
irisHead
#추출한 데이터에 row에 1,1,1,1,setosa추가하기.


irisHead <-  rbind(irisHead,c(1,1,1,1,"setosa"))
irisHead  아래 행 하나 들어가고

abc <- rep(2,6)
irisHead <- cbind(irisHead, abc) irisHead에 방해되지않고 옆에 abc 열이 추가됨.

irisHead
​
irisHead <- irisHead[,-ncol(irisHead)]  오른쪽 열부터 하나씩 지워짐.
irisHead$Sepal.Length <- as.numeric(irisHead$Sepal.Length)  setosa넣으면서 문자화가 되어서 숫자화 해줘야한다.
​
irisHead <- head(iris ,5)
irisHead$Length <- irisHead$Sepal.Length + irisHead$Petal.Length
irisHead​
열만들기. 
​
cbind는 matrix다.
irisD <- as.data.frame(irisM)
class(irisD)​
이렇게 바꾼다
​
mat1D
mat2D
mat12D <- rbind(mat1D,mat2D)​
컬럼 다르면 안겹쳐짐
colnames(mat2D) <-colnames(mat1D)
rbind(mat1D,mat2D)
​
​
# 변수 정의
no <- 1:4
name <- c("Apple", "Banana", "Peach", "Berry")
price <- c(500, 400, 300, 200)
qty <- c(5, 2, 7, 9)

# 데이터프레임 생성
fruit <- data.frame(no,  name, price, qty)

# 결과 출력
fruit​
​
fruit[,-c(1)]​
​
​
apply(df[,1:2],2,sum)
apply(df[,1:2],2,mean)
#행방향
df$Hap <- apply(df[,1:2],1,sum)
df
​
#부분 집합
subset(df, x>=3 & y>=8)​
​
​
merge(height,weight)​
​
weight <- data.frame(
                    id=c(2,1,3),
                    weight = c(70,60,80)
)
weight​
​
height <- data.frame(id = 1:3,  
                    height =c(160,170,180)              )
                    height
​
member <- list(name="홍길동", address="서울",tel="010-1111-1111",pay=300)
member​
​
$name
'<U+D64D><U+AE38><U+B3D9>'
$address
'<U+C11C><U+C6B8>'
$tel
'010-1111-1111'
$pay
300
​
member$name 으로 출력가능.
​
member$birth <- "1988-08-08"​
이렇게 추가도 가능.
​
# 문자열 처리
수집한 데이터의 필요한 문자열을 자르고, 교체하고, 추출하는 작업

## Stringr package 사용
- str_length() : 문자열 길이
- str_c() :  문자열 연결
- str_sub() : 범위에 해당하는 문자열 생성
- str_split() : 구분자를 기준으로 문자열을 분리하여 부분 생성
- str_replace() : 기존 문자열을 특정 문자열로 변환
- str_extract() :  문자열에서 특정 문자열 패턴의 첫번째 문자열 추출
- str_extract_all() :
- str_locate() : 문자열에서 특정 문자열 패턴의 첫번째 위치 추출
- str_locate_all() :​
​
string <- "hongkildong105youbee1002kwanwoo25장비2005"
# a ~ z 까지의 영문자가 연속으로 3개 발견된 문자열 추출
str_extract_all(string,"[a-z]{3}")
class(str_extract_all(string,"[a-z]{3}"))   ---리스트형
# a ~ z 까지의 영문자가 연속으로 3개~5개 발견된 문자열 추출
str_extract_all(string,"[a-z]{3,5}")
# 영문만 추출하기
aaa <- str_extract_all(string,"[a-z]{1,}")
unlist(aaa)[1]  -- 리스트형 해제하고 1번째 값 가져옴
str_extract_all(string,"[^a-z]{1,}") 영문자 제외
str_sub(string,1,33) 부분문자열 추출
str_sub(string,1,str_locate(string, "장비")[1]-1) 장비찾아서 제거.
str_to_upper(string) 대문자. 
string <- str_replace(string,"hongkildong105","홍길동35,")   처음문장을 뒤의 문장으로 변경 뒷문장에 ,붙어잇으면 연결됨 아래랑
string <- str_replace(string,"youbee1002","유비45,")
string <- str_replace(string,"kwanwoo25","관우25,")
string <- str_replace(string,"2005","20")
str_split(string, ",") 문자열 ,로 분리하기.
price <- "123,456,789"
str_split(price,",")  ,로 분리해서 123 456 789로 나뉨.
​
as.numeric(str_replace_all(price,",",""))
as.numeric(str_remove_all(price,","))  SPLIT은 분리인데. replace랑 remove는 지워서 연결되서 만든다.
​
temp <- c(1,2,NA,4)
temp
str_replace_na(temp)
str_replace_all(str_replace_na(temp),'NA','5')​
na변경법
아직까진 문자열.
​
temp <- c(1,2,NA,4)
temp
na.omit(temp)​
na를 제거 하는 문자.
​